//
//  ViewController.swift
//  lesson7 homeWork
//
//  Created by Женя  on 3.07.21.
//

import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        
        

        
//        task1. У нас есть базовый класс "Артист" и у него есть имя и фамилия. И есть метод "Выступление". У каждого артиста должно быть свое выступление: танцор танцует, певец поет и тд. А для художника, что бы вы не пытались ставить, пусть он ставит что-то свое (пусть меняет имя на свое артистическое). Когда вызываем метод "выступление" показать в консоле имя и фамилию артиста и собственно само выступление.
//        Полиморфизм используем для артистов. Положить их всех в массив, пройтись по нему и вызвать их метод "выступление"
        
//        1)Создать класс "Арист" с параметрами имя и фамилия
        
//        2)Создать класс "Танцор" который наследует(Полиморфизм) параметры класса "Арист"
        
//        3)Создать метод "Выступление" для "Танцор" который выведет в консоль имя и фомилию артиста и само выступление.
        
//        4)Создать класс "Певец" который наследует(Полиморфизм) параметры класса "Арист"
        
//        5)Создать метод "Выступление" для "Певец" который выведет в консоль имя и фомилию артиста и само выступление.
        
//        6)Создать класс "Художник" который наследует(Полиморфизм) параметры класса "Арист"
        
//        7)Создать метод "Выступление" для "Художник" который будет менять его имя на псевдоним и выступление и вывести это в консоль
        
//        8)Создать  массив
        
//        9)Добавить массив всех Артистов
        
//        10)Пройтись по массиву и вызвать их метод
        
        
//
//        task2. Создать базовый класс "транспортное средство" и добавить три разных проперти: скорость, вместимость, стоимость одного км. Так же создайте метод «перевозка», который принимает кол-во пассажиров и километраж. Создайте дочерние классы самолет, корабль, вертолет, машина.
//        Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса.  Переопределяет метод перевозки у каждого дочернего класса.
//        Создайте по одному объекту каждого дочернего класса, положить их в один массив и используя цикл, вызовите для каждого объекта метод перевозки и вывести в консоль результат (как быстро сможем перевести, стоимость, количество транспортных средств, необходимых для осуществления маршрута).
//        Используем полиморфизм
        
        
//        1) Создать класс "транспортное средство" с переменными: Скорость, Вместимость, Стоимость одного км
        
//        2) Создать метод "перевозка" который принимает кол-во пассажиров и километраж.
        
//        3) Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса
        
//        4) Создать класс "Самолет" который наследует параметры "транспортное средство"
        
//        5) Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса
        
//        6) Создать класс "Корабл" который наследует параметры "транспортное средство"
        
//        7) Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса
        
//        8) Создать класс "Вертолет" который наследует параметры "транспортное средство"
        
//        9) Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса
        
//        10) Создать класс "Машина" который наследует параметры "транспортное средство"
        
//        11) Сделайте у каждого класса init, внутри которого будет вызываться супер-init родительского класса
//        (override) Переопределяет метод перевозки у каждого дочернего класса.
//
//        12) Создайте по одному объекту каждого дочернего класса, положить их в один массив и используя цикл, вызовите для каждого объекта метод перевозки и вывести в консоль результат (как быстро сможем перевести, стоимость, количество транспортных средств, необходимых для осуществления маршрута).
        
        
        
        
        
        
        
        
//
//        task3. Создайте 5 классов: люди, крокодилы, обезьяны, собаки, жирафы.
//        - Создайте по пару объектов каждого класса и положите всех в один массив.
//        - Пройдите по массиву и выведите
//        - Сколько четвероногих?
//        - Сколько здесь животных?
//        - Сколько живых существ?
        
        
//          0) Создать общий класс для всех чтобы остальные от него наследовались
//        1) Создать класс люди
//
//        2) Создать пару обьектов
//
//        3) Создать метод который выводит сколько ног, живое ли существо, животное ли оно
//
//        4) Создать класс крокодилы
//
//        5) Создать пару обьктов
//
//        6) Создать метод который выводит сколько ног, живое ли существо, животное ли оно
//
//        7) Создать класс обезьяны
//
//        8) Создать пару обьектов
//
//        9) Создать метод который выводит сколько ног, живое ли существо, животное ли оно
//
//        10) Создать класс собаки
//
//        11) Создать пару обьектов
//
//        12) Создать метод который выводит сколько ног, живое ли существо, животное ли оно
//
//        13) Создать класс жирафы
//
//        14) Создать пару обьектов
//
//        15) Создать метод который выводит сколько ног, живое ли существо, животное ли оно
//
//        16) Создать массив с всеми объектами
//
//        17) Создать цикл который пройдет по всему массиву и выведет сколько ног, живое ли существо, животное ли оно
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        print("_____________________TASK 1 _____________________")

        print("_____________________DANCER _____________________")
        
        let dancer: Artist = Dancer(name: "Sergey", surname: "Sidorov", show: "Dancing")
        
        dancer.permofance()
        
        print("_____________________SINGER _____________________")
        
        let singer: Artist = Singer(name: "Vasiliy", surname: "Pupkin", show: "Sing")
        singer.permofance()
        
        print("_____________________PAINTER _____________________")
        
        let painter: Artist = Painter(name: "Alex", surname: "Iowa", show: "switch name",
                                      aliasName: "Ivasovski", aliasSurname: "Gera")
        
        painter.permofance()
        
        
        print("_____________________ARRAY _____________________")
        
        let array: [Artist] = [dancer, singer, painter]
        
        for value in array {
            value.permofance()
        }
        
        
        
        
        
        
        
        
        
        
        print("_____________________TASK 2_____________________")
        
        let plane: Transport = Plane(type: "Plane", speed: 700, capacity: 200, costOneKm: 100)
        
        let ship: Transport = Ship(type: "Ship", speed: 80, capacity: 500, costOneKm: 10)
        
        let helicopter: Transport = Helicopter(type: "Helicopter", speed: 250, capacity: 10, costOneKm: 50)
        
        let car: Transport = Car(type: "Car", speed: 120, capacity: 5, costOneKm: 5)
        
        let arrayTransports : [Transport] = [plane, ship, helicopter, car]
        
        for value in arrayTransports {
            value.costAndTimeWithDastance(distance: 1500, forPeoples: 1500)
            
        }
        
        
        
        print("_____________________TASK 3_____________________")
        
        
        

        
        let peopleOne: Life = People(countLeg: 2, animal: false, lifeIs: true)
        let peopleTwo: Life = People(countLeg: 2, animal: false, lifeIs: true)
        
        peopleOne.getInfo()
        peopleTwo.getInfo()
        
        let crocodileOne: Life = Crocodile(countLeg: 4, animal: true, lifeIs: true)
        let crocodileTwo: Life = Crocodile(countLeg: 2, animal: true, lifeIs: true)
        
        crocodileOne.getInfo()
        crocodileTwo.getInfo()
        
        let monkeyOne: Life = Monkey(countLeg: 4, animal: true, lifeIs: true)
        let monkeyTwo: Life = Monkey(countLeg: 4, animal: true, lifeIs: true)
        
        monkeyOne.getInfo()
        monkeyTwo.getInfo()
        
        let dogOne: Life = Dogs(countLeg: 4, animal: true, lifeIs: true)
        let dogTwo: Life = Dogs(countLeg: 4, animal: true, lifeIs: true)
        
        dogOne.getInfo()
        dogTwo.getInfo()
        
        let giraffeOne: Life = Giraffes(countLeg: 4, animal: true, lifeIs: true)
        let giraffeTwo: Life = Giraffes(countLeg: 3, animal: true, lifeIs: true)
        
        giraffeOne.getInfo()
        giraffeTwo.getInfo()
        
        let arrayLife: [Life] = [peopleOne, peopleTwo, crocodileOne, crocodileTwo,
                                 monkeyOne, monkeyTwo, dogOne, dogTwo, giraffeOne, giraffeTwo]
        
        var howManyFourLegget: [Any] = []
        var countAnimals: [Any] = []
        var countLife: [Any] = []
        
        for value in arrayLife {
            if value.countLeg == 4 {
                howManyFourLegget.append(value.countLeg)
            }
                    if value.animal == true {
                        countAnimals.append(value.animal)
                    }
                            if value.lifeIs == true {
                                countLife.append(value.lifeIs)
                        
                        }
        }
        
        print("Сколько четвероногих?: \(howManyFourLegget.count)")
        print("Сколько здесь животных?: \(countAnimals.count)")
        print("Сколько живых существ?: \(countLife.count)")
        
        
        
        
        
    }


}

